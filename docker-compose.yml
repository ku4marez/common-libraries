version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  clinic-management-mongodb:
    image: mongo:5.0
    container_name: clinic-management-mongodb
    ports:
      - "27017:27017" # Clinic Management MongoDB
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - clinic_management_mongodb_data:/data/db
    profiles:
      - clinic-management

  appointment-notifications-mongodb:
    image: mongo:5.0
    container_name: appointment-notifications-mongodb
    ports:
      - "27019:27017" # Appointment Notifications MongoDB
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - appointment_notifications_mongodb_data:/data/db
    profiles:
      - appointment-notifications

  authentication-service-mongodb:
    image: mongo:5.0
    container_name: authentication-service-mongodb
    ports:
      - "27018:27017" # Expose MongoDB on localhost
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - authentication_service_mongodb_data:/data/db # Persistent storage
    profiles:
      - authentication-service

volumes:
  clinic_management_mongodb_data:
  appointment_notifications_mongodb_data:
  authentication_service_mongodb_data:
